/* * ATM Example system - file Deposit.java    * * copyright (c) 2001 - Russell C. Bjork * */ package edu.gordon.atm.transaction;import edu.gordon.atm.physical.*;import edu.gordon.banking.AccountInformation;import edu.gordon.banking.Card;import edu.gordon.banking.Message;import edu.gordon.banking.Money;import edu.gordon.banking.Receipt;import edu.gordon.banking.Status;/** Representation for a deposit transaction */public class Deposit extends Transaction{		NetworkToBank net ; EnvelopeAcceptor te;    /** Constructor     *     *  @param edu.gordon.atm the ATM used to communicate with customer     *  @param session the session in which the transaction is being performed     *  @param card the customer's card     *  @param pin the PIN entered by the customer     */    public Deposit(Card card, int pin, NetworkToBank _net , EnvelopeAcceptor _te)    {        super(card, pin);        net = _net;        te= _te;    }        /** Get specifics for the transaction from the customer     *     *  @return message to bank for initiating this transaction     *  @exception CustomerConsole.Cancelled if customer cancelled this transaction     */    public Message getSpecificsFromCustomer(CustomerConsole console) throws CustomerConsole.Cancelled    {        to = console.readMenuChoice(            "Account to deposit to",            AccountInformation.ACCOUNT_NAMES);        amount = console.readAmount("Amount to deposit");                return new Message(Message.INITIATE_DEPOSIT,                           card, pin, serialNumber, -1, to, amount);    }        /** Complete an approved transaction     *     *  @return receipt to be printed for this transaction     *  @exception CustomerConsole.Cancelled if customer cancelled or      *             transaction timed out     */    public void  completeTransaction(Receipt c_receipt ) throws CustomerConsole.Cancelled    {    	te.acceptEnvelope();        Status status = net.sendMessage(            new Message(Message.COMPLETE_DEPOSIT,                        card, pin, serialNumber, -1, to, amount),             balances);            	c_receipt.detailsPortion = new String[2];            	c_receipt.detailsPortion[0] = "DEPOSIT TO: " +                                     AccountInformation.ACCOUNT_ABBREVIATIONS[to];            	c_receipt.detailsPortion[1] = "AMOUNT: " + amount.toString();                        }        /** Account to deposit to     */     private int to;        /** Amount of money to deposit     */    private Money amount;      }